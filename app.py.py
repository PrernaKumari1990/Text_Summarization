# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E7zBYYgq8M--jER9Q1psi7c_cOjEYVVe
"""

from flask import Flask, render_template, request, jsonify

from transformers import PegasusForConditionalGeneration, PegasusTokenizer

app = Flask(__name__)

model_name = "google/pegasus-cnn_dailymail"
tokenizer = PegasusTokenizer.from_pretrained(model_name)

device = "cpu"
model = PegasusForConditionalGeneration.from_pretrained(model_name).to(device)

@app.route('/')
def home():
    return render_template('film.html')

@app.route('/text-summarization', methods=["POST"])
def summarize():
    if request.method == "POST":
        # Try to get the input text from form data
        inputtext = request.form.get("inputtext_")

        if inputtext is None:
            # If not found in form data, try to get it from JSON data in the request payload
            data = request.get_json()
            inputtext = data.get("inputtext_")

        # If still not found, return an error response
        if inputtext is None:
            return jsonify({"error": "Input text not provided"}), 400

        # Tokenize and generate summary
        input_text = "summarize: " + inputtext
        tokenized_text = tokenizer.encode(input_text, return_tensors='pt', truncation=True,).to(device)
        summary_ = model.generate(tokenized_text,)
        summary = tokenizer.decode(summary_[0], skip_special_tokens=True)

        # Return the summary in JSON format
        return jsonify({"summary": summary})

if __name__ == '__main__':
    app.run(debug=True, port=8000)